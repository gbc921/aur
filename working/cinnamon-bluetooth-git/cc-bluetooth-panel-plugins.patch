--- cc-bluetooth-panel-original.c	2014-05-29 14:25:22.834216468 -0300
+++ cc-bluetooth-panel.c	2014-05-29 14:26:47.620880139 -0300
@@ -34,7 +34,7 @@
 #include <bluetooth-utils.h>
 //#include <bluetooth-killswitch.h>
 #include <bluetooth-chooser.h>
-#include <bluetooth-plugin-manager.h>
+//#include <bluetooth-plugin-manager.h>
 
 CC_PANEL_REGISTER (CcBluetoothPanel, cc_bluetooth_panel)
 
@@ -106,7 +106,7 @@
 {
 	CcBluetoothPanel *self;
 
-	bluetooth_plugin_manager_cleanup ();
+	//bluetooth_plugin_manager_cleanup ();
 
 	self = CC_BLUETOOTH_PANEL (object);
 	g_clear_object (&self->priv->builder);
@@ -271,19 +271,19 @@
 		return;
 
 	uuids = (char **) g_value_get_boxed (&value);
-	list = bluetooth_plugin_manager_get_widgets (bdaddr, (const char **) uuids);
-	if (list == NULL) {
-		g_value_unset (&value);
-		return;
-	}
-
-	container = WID ("additional_setup_box");
-	for (l = list; l != NULL; l = l->next) {
-		GtkWidget *widget = l->data;
-		gtk_box_pack_start (GTK_BOX (container), widget,
-				    FALSE, FALSE, 0);
-		gtk_widget_show_all (widget);
-	}
+	//list = bluetooth_plugin_manager_get_widgets (bdaddr, (const char **) uuids);
+	//if (list == NULL) {
+	//	g_value_unset (&value);
+	//	return;
+	//}
+
+	//container = WID ("additional_setup_box");
+	//for (l = list; l != NULL; l = l->next) {
+	//	GtkWidget *widget = l->data;
+	//	gtk_box_pack_start (GTK_BOX (container), widget,
+	//			    FALSE, FALSE, 0);
+	//	gtk_widget_show_all (widget);
+	//}
 	gtk_widget_show (container);
 	g_value_unset (&value);
 }
@@ -730,10 +730,10 @@
 
 	name = bluetooth_chooser_get_selected_device_name (BLUETOOTH_CHOOSER (self->priv->chooser));
 
-	if (show_confirm_dialog (self, name) != FALSE) {
-		if (remove_selected_device (self))
-			bluetooth_plugin_manager_device_deleted (address);
-	}
+	//if (show_confirm_dialog (self, name) != FALSE) {
+	//	if (remove_selected_device (self))
+			//bluetooth_plugin_manager_device_deleted (address);
+	//}
 
 	g_free (address);
 	g_free (name);
@@ -809,7 +809,7 @@
 
 	self->priv = BLUETOOTH_PANEL_PRIVATE (self);
 
-	bluetooth_plugin_manager_init ();
+	//bluetooth_plugin_manager_init ();
 	//self->priv->killswitch = bluetooth_killswitch_new ();
 	self->priv->client = bluetooth_client_new ();
 	self->priv->connecting_devices = g_hash_table_new_full (g_str_hash,
